<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-ietf-dots-server-discovery-09"
     ipr="trust200902">
  <front>
    <title
    abbrev="DOTS Server/Call Home Client Discovery">Distributed-Denial-of-Service
    Open Threat Signaling (DOTS) Agent Discovery</title>

    <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
      <organization>Orange</organization>

      <address>
        <postal>
          <street></street>

          <city>Rennes</city>

          <region></region>

          <code>35000</code>

          <country>France</country>
        </postal>

        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
      <organization abbrev="McAfee">McAfee, Inc.</organization>

      <address>
        <postal>
          <street>Embassy Golf Link Business Park</street>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code>560071</code>

          <country>India</country>
        </postal>

        <email>TirumaleswarReddy_Konda@McAfee.com</email>
      </address>
    </author>

    <date />

    <workgroup>DOTS</workgroup>

    <keyword>Automation</keyword>

    <keyword>Provisioning</keyword>

    <keyword>Configuration</keyword>

    <keyword>Location</keyword>

    <keyword>Deployment</keyword>

    <keyword>Multihoming</keyword>

    <keyword>DDoS</keyword>

    <keyword>Security</keyword>

    <abstract>
      <t>It may not be possible for a network to determine the cause for an
      attack, but instead just realize that some resources seem to be under
      attack. To fill that gap, Distributed-Denial-of-Service Open Threat
      Signaling (DOTS) allows a network to inform a DOTS server that it is
      under a potential attack so that appropriate mitigation actions are
      undertaken.</t>

      <t>This document specifies mechanisms to configure DOTS clients with
      their DOTS servers. The discovery procedure also covers the DOTS Signal
      Channel Call Home.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>DDoS Open Threat Signaling (DOTS) <xref
      target="I-D.ietf-dots-architecture"></xref> specifies an architecture,
      in which a DOTS client can inform a DOTS server that the network is
      under a potential attack and that appropriate mitigation actions are
      required. Indeed, because the lack of a common method to coordinate a
      real-time response among involved actors and network domains inhibits
      the effectiveness of DDoS attack mitigation, DOTS signal channel
      protocol <xref target="I-D.ietf-dots-signal-channel"></xref> is meant to
      carry requests for DDoS attack mitigation, thereby reducing the impact
      of an attack and leading to more efficient defensive actions in various
      deployment scenarios such as those discussed in <xref
      target="I-D.ietf-dots-use-cases"></xref>. Moreover, DOTS clients can
      instruct a DOTS server to install filtering rules by means of the DOTS
      data channel protocol <xref
      target="I-D.ietf-dots-data-channel"></xref>.</t>

      <t>The basic high-level DOTS architecture is illustrated in <xref
      target="arch"></xref>.</t>

      <t><figure align="center" anchor="arch" title="Basic DOTS Architecture">
          <artwork align="center"><![CDATA[       +-----------+            +-------------+
       | Mitigator | ~~~~~~~~~~ | DOTS Server |
       +-----------+            +------+------+
                                       |
                                       |
                                       |
       +---------------+        +------+------+
       | Attack Target | ~~~~~~ | DOTS Client |
       +---------------+        +-------------+
]]></artwork>
        </figure></t>

      <t><xref target="I-D.ietf-dots-architecture"></xref> specifies that the
      DOTS client may be provided with a list of DOTS servers; each associated
      with one or more IP addresses. These addresses may or may not be of the
      same address family. The DOTS client establishes one or more DOTS
      sessions by connecting to the provided DOTS server addresses.</t>

      <t>This document specifies methods for DOTS clients to discover their
      DOTS server(s). The rationale for specifying multiple discovery
      mechanisms is discussed in <xref target="rationale"></xref>.</t>

      <t>The discovery methods can also be used by a DOTS server to locate a
      DOTS client in the context of DOTS Signal Channel Call Home <xref
      target="I-D.ietf-dots-signal-call-home"></xref>. The basic high-level
      DOTS Call Home architecture is illustrated in <xref
      target="fa"></xref>.</t>

      <t><figure align="center" anchor="fa"
          title="Basic DOTS Signal Channel Call Home Functional Architecture">
          <artwork align="center"><![CDATA[+---------------+        +-------------+    
| Alert/DMS/    | ~~~~~~ |  Call Home  |    
| Peer DMS/...  |        | DOTS client |    
+---------------+        +------+------+    
                                |           
                                |           
                                |           
+---------------+        +------+------+    
|    Attack     | ~~~~~~ |  Call Home  |    
|   Source(s)   |        | DOTS server |    
+---------------+        +-------------+                     ]]></artwork>
        </figure></t>

      <t>A DOTS agent may be used to establish base DOTS channels, DOTS Call
      Home, or both. This specification accommodates all these deployment
      cases.</t>

      <t>Considerations for the selection of DOTS server(s) by multi-homed
      DOTS clients are out of scope; readers should refer to <xref
      target="I-D.ietf-dots-multihoming"></xref> for more details.</t>

      <t>This document assumes that security credentials to authenticate DOTS
      server(s) are provisioned to a DOTS client using a variety of means such
      as (but not limited to) those discussed in <xref
      target="RFC8572"></xref> or <xref
      target="I-D.ietf-anima-bootstrapping-keyinfra"></xref>. DOTS clients use
      those credentials for authentication purposes following the rules
      documented in <xref target="I-D.ietf-dots-signal-channel"></xref>.</t>
    </section>

    <section title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119"></xref><xref target="RFC8174"></xref> when, and
      only when, they appear in all capitals, as shown here.</t>

      <t>The reader should be familiar with the terms defined in <xref
      target="I-D.ietf-dots-architecture"></xref>, <xref
      target="RFC3958"></xref>, and <xref
      target="I-D.ietf-dots-signal-call-home"></xref>.</t>

      <t>DHCP refers to both DHCPv4 <xref target="RFC2131"></xref> and DHCPv6
      <xref target="RFC8415"></xref>.</t>

      <t>"Peer DOTS agent" refers to the peer DOTS server (base DOTS
      operation) or to a peer Call Home DOTS client (for DOTS Signal Channel
      Call Home).</t>
    </section>

    <section anchor="rationale" title="Why Multiple Discovery Mechanisms?">
      <t>It is tempting to specify one single discovery mechanism for DOTS.
      Nevertheless, the analysis of the various use cases sketched in <xref
      target="I-D.ietf-dots-use-cases"></xref> reveals that it is unlikely
      that one single discovery method can be suitable for all the sample
      deployments. Concretely:<list style="symbols">
          <t>Many use cases discussed in <xref
          target="I-D.ietf-dots-use-cases"></xref> do involve a CPE device.
          Multiple CPEs, connected to distinct network providers may even be
          considered. It is intuitive to leverage on existing mechanisms such
          as discovery using service resolution or DHCP to provision the CPE
          acting as a DOTS client with the DOTS server(s).</t>

          <t>Resolving a DOTS server domain name offered by an upstream
          transit provider provisioned to a DOTS client into IP address(es)
          require the use of the appropriate DNS resolvers; otherwise,
          resolving those names will fail. The use of protocols such as DHCP
          does allow to associate provisioned DOTS server domain names with a
          list of DNS servers to be used for name resolution. Furthermore,
          DHCP allows to directly provision IP addresses avoiding therefore
          the need for extra lookup delays.</t>

          <t>Some of the use cases may allow DOTS clients to have direct
          communications with upstream DOTS servers; that is no DOTS gateway
          is involved. Leveraging on existing features that do not require
          specific feature on the node embedding the DOTS client may ease DOTS
          deployment. Typically, the use of Straightforward-Naming Authority
          Pointer (S-NAPTR) lookups <xref target="RFC3958"></xref> allows the
          DOTS server administrators to provision the preferred DOTS transport
          protocol between the DOTS client and the DOTS server and allows the
          DOTS client to discover this preference.</t>

          <t>The upstream network provider is not the DDoS mitigation provider
          for some of these use cases. It is safe to assume that for such
          deployments, the DOTS server(s) domain name is provided during the
          service subscription (i.e., manual/local configuration).</t>

          <t>Multiple DOTS clients may be enabled within a network (e.g.,
          enterprise network). Dynamic means to discover DOTS servers in a
          deterministic manner are interesting from an operational
          standpoint.</t>

          <t>Some of the use cases may involve a DOTS gateway that is
          responsible for selecting the appropriate DOTS server(s) to relay
          requests received from DOTS clients.</t>
        </list></t>

      <t>Consequently, this document describes a unified discovery logic
      (<xref target="logic"></xref>) which involves the following
      mechanisms:</t>

      <t><list style="symbols">
          <t>Dynamic discovery using DHCP (<xref target="dhcp"></xref>).</t>

          <t>A resolution mechanism based on straightforward Naming Authority
          Pointer (S-NAPTR) resource records in the Domain Name System (DNS)
          (<xref target="srvr"></xref>).</t>

          <t>DNS Service Discovery (<xref target="DNSSD"></xref>).</t>
        </list></t>
    </section>

    <section anchor="logic" title="Unified DOTS Discovery Procedure">
      <t>A key point in the deployment of DOTS is the ability of network
      operators to be able to configure DOTS clients with the correct DOTS
      server(s) information consistently. To accomplish this, operators will
      need a consistent set of ways in which DOTS clients can discover this
      information, and a consistent priority among these options. If some
      devices prefer manual configuration over dynamic discovery, while others
      prefer dynamic discovery over manual configuration, the result will be a
      process of "whack-a-mole", where the operator must find devices that are
      using the wrong DOTS server(s), determine how to ensure the devices are
      configured properly, and then reconfigure the device through the
      preferred method.</t>

      <t>All DOTS clients MUST support at least one of the three mechanisms
      below to determine a DOTS server list. All DOTS clients SHOULD implement
      all three, or as many as are practical for any specific device (e.g., a
      CPE will support the first two mechanisms, a host within a LAN will
      support the last two mechanisms, or an application server will support a
      local configuration. More samples are discussed in <xref
      target="rationale"></xref>), of these ways to discover DOTS servers, in
      order to facilitate the deployment of DOTS in large scale
      environments:</t>

      <t><list style="numbers">
          <t>Explicit configuration:<list style="symbols">
              <t>Local/Manual configuration: A DOTS client, will learn the
              DOTS server(s) by means of local or manual DOTS configuration
              (i.e., DOTS servers configured at the system level).
              Configuration discovered from a DOTS client application is
              considered as local configuration.<vspace blankLines="1" />An
              implementation may give the user an opportunity (e.g., by means
              of configuration file options or menu items) to specify DOTS
              server(s) for each address family. These may be specified either
              as IP addresses or the DNS name of a DOTS server. When only DOTS
              server's IP addresses are configured, a reference identifier
              must also be configured for authentication purposes.</t>

              <t>Automatic configuration (e.g., DHCP, an automation system):
              The DOTS client attempts to discover DOTS server(s) names and/or
              addresses from DHCP, as described in <xref
              target="dhcp"></xref>.</t>
            </list></t>

          <t>Service Resolution : The DOTS client attempts to discover DOTS
          server name(s) using service resolution, as specified in <xref
          target="srvr"></xref>.</t>

          <t>DNS SD: DNS Service Discovery. The DOTS client attempts to
          discover DOTS server name(s) using DNS service discovery, as
          specified in <xref target="DNSSD"></xref>.</t>
        </list></t>

      <t>Some of these mechanisms imply the use of DNS to resolve the IP
      address(es) of the DOTS server, while others imply an IP address of the
      relevant DOTS server is obtained directly. Implementation options may
      vary on a per device basis, as some devices may not have DNS
      capabilities and/or proper configuration.</t>

      <t>DOTS clients will prefer information received from the discovery
      methods in the order listed.</t>

      <t>On hosts with more than one interface or address family (IPv4/v6),
      the DOTS server discovery procedure has to be performed for each
      combination of interface and address family. A DOTS client may choose to
      perform the discovery procedure only for a desired interface/address
      combination if the client does not wish to discover a DOTS server for
      all combinations of interface and address family.</t>

      <t>This procedure is also followed by a Call Home DOTS server to
      discover its Call Home DOTS client in the context of <xref
      target="I-D.ietf-dots-signal-call-home"></xref>.</t>

      <t>The discovery method is reiterated by a DOTS agent upon the following
      events:<list style="symbols">
          <t>Expiry of a lease associated with a discovered DOTS agent.</t>

          <t>Expiry of a peer DOTS agent's certificate currently in use.</t>

          <t>Attachment to a new network.</t>
        </list></t>
    </section>

    <section anchor="dhcp" title="DHCP Options for DOTS Agent Discovery">
      <t>As reported in Section 1.7.2 of <xref target="RFC6125"></xref>:<list
          style="empty">
          <t>"few certification authorities issue server certificates based on
          IP addresses, but preliminary evidence indicates that such
          certificates are a very small percentage (less than 1%) of issued
          certificates".</t>
        </list></t>

      <t>In order to allow for PKIX-based authentication between a DOTS client
      and server while accommodating for the current best practices for
      issuing certificates, this document allows for configuring names to DOTS
      clients. These names can be used for two purposes: to retrieve the list
      of IP addresses of a DOTS server or to be presented as a reference
      identifier for authentication purposes.</t>

      <t>Defining the option to include a list of IP addresses would avoid a
      dependency on an underlying name resolution, but that design requires to
      also supply a name for PKIX-based authentication purposes.</t>

      <t>The list of the IP addresses returned by DHCP servers is typically
      used to fed the DOTS server selection procedure or to provide DOTS
      agents with primary and backup IP addresses of their peer DOTS
      agents.</t>

      <t>The design assumes that the same peer DOTS agent is used for
      establishing both signal and data channels. For more customized
      configurations (e.g., transport-specific configuration, distinct DOTS
      servers for the signal and the data channels), an operator can supply
      only a DOTS reference identifier that will be then passed to the
      procedure described in <xref target="srvr"></xref>.</t>

      <t>The design allows to terminate the base DOTS channels and DOTS Call
      Home on the same or distinct peer DOTS agents. If distinct peer DOTS
      agents are deployed, the DHCP option can return, for example, a list of
      IP addresses to a requesting DOTS agent. This list includes the IP
      address to be used for the base DOTS channels and the IP address for the
      DOTS Call Home. The DOTS client (or Call Home DOTS server) will then use
      the address selection specified in Section 4.3 of <xref
      target="I-D.ietf-dots-signal-channel"></xref> to identify the IP address
      of the peer DOTS server (or Call Home DOTS client). For example: <list
          style="empty">
          <t>Let's consider that the DOTS server is reachable at
          2001:db8:122:300::1 while the Call Home DOTS client is reachable at
          2001:db8:122:300::2. The DHCP server will then return one DOTS
          reference identifier and a list that includes both
          2001:db8:122:300::1 and 2001:db8:122:300::2 to a requesting DHCP
          client. That list is passed to the DOTS client (or Call Home DOTS
          server) which will try to establish connections to the addresses of
          that list and destination port number 4646 (or 4647). As a result,
          the DOTS client (or Call Home DOTS server) will select
          2001:db8:122:300::1 (or 2001:db8:122:300::2) as a DOTS server (or
          Call Home DOTS client).</t>
        </list></t>

      <section title="DHCPv6 DOTS Options">
        <section title="Format of DOTS Reference Identifier Option">
          <t>The DHCPv6 DOTS Reference Identifier option is used to configure
          a name of the DOTS server (or the name of the Call Home DOTS
          client). The format of this option is shown in <xref
          target="ri_option"></xref>.</t>

          <t><figure anchor="ri_option"
              title="DHCPv6 DOTS Reference Identifier Option">
              <artwork><![CDATA[    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     OPTION_V6_DOTS_RI         |         Option-length         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                      dots-agent-name (FQDN)                   |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork>
            </figure>The fields of the option shown in <xref
          target="ri_option"></xref> are as follows:<?rfc subcompact="yes" ?></t>

          <t><list style="symbols">
              <t>Option-code: OPTION_V6_DOTS_RI (TBA1, see <xref
              target="iana6"></xref>)</t>

              <t>Option-length: Length of the dots-agent-name field in
              octets.</t>

              <t>dots-agent-name: A fully qualified domain name of the peer
              DOTS agent. This field is formatted as specified in Section 10
              of <xref target="RFC8415"></xref>.</t>
            </list></t>

          <t><?rfc subcompact="no" ?>An example of the dots-agent-name
          encoding is shown in <xref target="fqdn"></xref>. This example
          conveys the FQDN "dots.example.com.".</t>

          <t><figure anchor="fqdn"
              title="An example of the dots-agent-name Encoding">
              <artwork><![CDATA[      +------+------+------+------+------+------+------+------+------+
      | 0x04 |   d  |   o  |   t  |  s   | 0x07 |   e  |   x  |   a  |
      +------+------+------+------+------+------+------+------+------+
      |   m  |   p  |   l  |   e  | 0x03 |   c  |   o  |   m  | 0x00 |
      +------+------+------+------+------+------+------+------+------+
]]></artwork>
            </figure></t>

          <t></t>
        </section>

        <section title="Format of DOTS Address Option">
          <t>The DHCPv6 DOTS Address option can be used to configure a list of
          IPv6 addresses of a DOTS server (or a Call Home DOTS client). The
          format of this option is shown in <xref
          target="dhcpv6_option"></xref>. As a reminder, this format follows
          the guidelines for creating new DHCPv6 options (Section 5.1 of <xref
          target="RFC7227"></xref>).</t>

          <t><figure anchor="dhcpv6_option" title="DHCPv6 DOTS Address Option">
              <artwork><![CDATA[    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  OPTION_V6_DOTS_ADDRESS       |         Option-length         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                    DOTS ipv6-address                          |
   |                                                               |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                    DOTS ipv6-address                          |
   |                                                               |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                              ...                              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork>
            </figure>The fields of the option shown in <xref
          target="dhcpv6_option"></xref> are as follows:<?rfc subcompact="yes" ?></t>

          <t><list style="symbols">
              <t>Option-code: OPTION_V6_DOTS_ADDRESS (TBA2, see <xref
              target="iana6"></xref>)</t>

              <t>Option-length: Length of the 'DOTS ipv6-address(es)' field in
              octets. MUST be a multiple of 16.</t>

              <t>DOTS ipv6-address(es): Includes one or more IPv6 addresses
              <xref target="RFC4291"></xref> of the peer DOTS agent to be used
              by a DOTS agent for establishing a DOTS session. <vspace
              blankLines="1" />Note, IPv4-mapped IPv6 addresses (Section
              2.5.5.2 of <xref target="RFC4291"></xref>) are allowed to be
              included in this option.</t>
            </list></t>

          <t><?rfc subcompact="no" ?></t>
        </section>

        <section title="DHCPv6 Client Behavior">
          <t>DHCP clients MAY request options OPTION_V6_DOTS_RI and
          OPTION_V6_DOTS_ADDRESS, as defined in <xref
          target="RFC8415"></xref>, Sections 18.2.1, 18.2.2, 18.2.4, 18.2.5,
          18.2.6, and 21.7. As a convenience to the reader, it is mentioned
          here that the DHCP client includes the requested option codes in the
          Option Request Option.</t>

          <t>If the DHCP client receives more than one instance of
          OPTION_V6_DOTS_RI (or OPTION_V6_DOTS_ADDRESS) option, it MUST use
          only the first instance of that option.</t>

          <t>If the DHCP client receives both OPTION_V6_DOTS_RI and
          OPTION_V6_DOTS_ADDRESS, the content of OPTION_V6_DOTS_RI is used as
          reference identifier for authentication purposes (e.g., PKIX <xref
          target="RFC6125"></xref>), while the addresses included in
          OPTION_V6_DOTS_ADDRESS are used to reach the peer DOTS agent. In
          other words, the name conveyed in OPTION_V6_DOTS_RI MUST NOT be
          passed to underlying resolution library in the presence of
          OPTION_V6_DOTS_ADDRESS in a response.</t>

          <t>If the DHCP client receives OPTION_V6_DOTS_RI only, but
          OPTION_V6_DOTS_RI option contains more than one name, as
          distinguished by the presence of multiple root labels, the DHCP
          client MUST use only the first name. Once the name is validated
          (Section 8 of <xref target="RFC8415"></xref>), the name is passed to
          a name resolution library. Moreover, that name is also used as a
          reference identifier for authentication purposes.</t>

          <t>If the DHCP client receives OPTION_V6_DOTS_ADDRESS only, the
          address(es) included in OPTION_V6_DOTS_ADDRESS are used to reach the
          peer DOTS agent. In addition, these addresses can be used as
          identifiers for authentication.</t>

          <t>The DHCP client MUST silently discard multicast and host loopback
          addresses <xref target="RFC6890"></xref> conveyed in
          OPTION_V6_DOTS_ADDRESS.</t>
        </section>
      </section>

      <section title="DHCPv4 DOTS Options">
        <section title="Format of DOTS Reference Identifier Option">
          <t>The DHCPv4 DOTS Reference Identifier option is used to configure
          a name of the peer DOTS agent. The format of this option is
          illustrated in <xref target="dhcpri_dots"></xref>.</t>

          <t><figure anchor="dhcpri_dots"
              title="DHCPv4 DOTS Reference Identifier Option">
              <artwork><![CDATA[
          Code  Length   Peer DOTS agent name
         +-----+-----+-----+-----+-----+-----+-----+--
         |TBA3 |  n  |  s1 |  s2 |  s3 |  s4 | s5  |  ...
         +-----+-----+-----+-----+-----+-----+-----+--

   The values s1, s2, s3, etc. represent the domain name labels in the
   domain name encoding.

]]></artwork>
            </figure></t>

          <t>The fields of the option shown in <xref
          target="dhcpri_dots"></xref> are as follows:<?rfc subcompact="yes" ?><list
              style="symbols">
              <t>Code: OPTION_V4_DOTS_RI (TBA3, see <xref
              target="iana4"></xref>).</t>

              <t>Length: Includes the length of the "Peer DOTS agent name"
              field in octets.</t>

              <t>Peer DOTS agent name: The domain name of the peer DOTS agent.
              This field is formatted as specified in Section 10 of <xref
              target="RFC8415"></xref>.</t>
            </list></t>

          <t><?rfc subcompact="no" ?></t>
        </section>

        <section title="Format of DOTS Address Option">
          <t>The DHCPv4 DOTS Address option can be used to configure a list of
          IPv4 addresses of a peer DOTS agent. The format of this option is
          illustrated in <xref target="dhcp_dots"></xref>.</t>

          <t><figure anchor="dhcp_dots" title="DHCPv4 DOTS Address Option">
              <artwork><![CDATA[       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |  Code=TBA4    |     Length    |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |                               |
      +       DOTS IPv4 Address       |
      |                               |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  ---
      |                               |   |
      +       DOTS IPv4 Address       |   |
      |                               | optional
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+   |
      .             ...               .   |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  ---

]]></artwork>
            </figure></t>

          <t>The fields of the option shown in <xref
          target="dhcp_dots"></xref> are as follows:<?rfc subcompact="yes" ?><list
              style="symbols">
              <t>Code: OPTION_V4_DOTS_ADDRESS (TBA4, see <xref
              target="iana4"></xref>).</t>

              <t>Length: is set to 4*N, where N is the number of IPv4
              addresses included in the option.</t>

              <t>DOTS IPv4 Address(es): Contains one or more IPv4 addresses of
              the peer DOTS agent to be used by a DOTS agent.</t>
            </list></t>

          <t><?rfc subcompact="no" ?>OPTION_V4_DOTS_ADDRESS is a
          concatenation-requiring option. As such, the mechanism specified in
          <xref target="RFC3396"></xref> MUST be used if
          OPTION_V4_DOTS_ADDRESS exceeds the maximum DHCPv4 option size of 255
          octets.</t>
        </section>

        <section title="DHCPv4 Client Behavior">
          <t>To discover a peer DOTS agent, the DHCPv4 client MUST include
          both OPTION_V4_DOTS_RI and OPTION_V4_DOTS_ADDRESS in a Parameter
          Request List Option <xref target="RFC2132"></xref>.</t>

          <t>If the DHCP client receives more than one instance of
          OPTION_V4_DOTS_RI (or OPTION_V4_DOTS_ADDRESS) option, it MUST use
          only the first instance of that option.</t>

          <t>If the DHCP client receives both OPTION_V4_DOTS_RI and
          OPTION_V4_DOTS_ADDRESS, the content of OPTION_V4_DOTS_RI is used as
          reference identifier for authentication purposes, while the
          addresses included in OPTION_V4_DOTS_ADDRESS are used to reach the
          peer DOTS agent. In other words, the name conveyed in
          OPTION_V4_DOTS_RI MUST NOT be passed to underlying resolution
          library in the presence of OPTION_V4_DOTS_ADDRESS in a response.</t>

          <t>If the DHCP client receives OPTION_V4_DOTS_RI only, but
          OPTION_V4_DOTS_RI option contains more than one name, as
          distinguished by the presence of multiple root labels, the DHCP
          client MUST use only the first name. Once the name is validated
          (Section 10 of <xref target="RFC8415"></xref>), the name is passed
          to a name resolution library. Moreover, that name is also used as a
          reference identifier for authentication purposes.</t>

          <t>If the DHCP client receives OPTION_V4_DOTS_ADDRESS only, the
          address(es) included in OPTION_V4_DOTS_ADDRESS are used to reach the
          peer DOTS server. In addition, these addresses can be used as
          identifiers for authentication.</t>

          <t>The DHCP client MUST silently discard multicast and host loopback
          addresses conveyed in OPTION_V4_DOTS_ADDRESS.</t>
        </section>
      </section>
    </section>

    <section anchor="srvr" title="Discovery using Service Resolution">
      <t>This mechanism is performed in two steps:<list style="numbers">
          <t>A DNS domain name is retrieved for each combination of interface
          and address family. A DOTS agent has to determine the domain in
          which it is located relying on dynamic means such as DHCP (<xref
          target="dhcp"></xref>) . Implementations may allow the user to
          specify a default name that is used, if no specific name has been
          configured.</t>

          <t>Retrieved DNS domain names are then used for S-NAPTR lookups
          <xref target="RFC3958"></xref>. Further DNS lookups may be necessary
          to determine the peer DOTS agent IP address(es).</t>
        </list></t>

      <t>Once the DOTS agent has retrieved its DNS domain or discovered the
      peer DOTS agent name that needs to be resolved (e.g., <xref
      target="dhcp"></xref>), an S-NAPTR lookup with 'DOTS' application
      service and the desired protocol tag is made to obtain information
      necessary to connect to the authoritative peer DOTS agent within the
      given domain.</t>

      <t>This specification defines "DOTS" and "DOTS-CALL-HOME" as application
      service tags (Sections <xref format="counter" target="serviceT"></xref>
      and <xref format="counter" target="serviceT2"></xref>). It also defines
      "signal.udp" (<xref target="suappt"></xref>), "signal.tcp" (<xref
      target="stappt"></xref>), and "data.tcp" (<xref target="dappt"></xref>)
      as application protocol tags. An example is provided in <xref
      target="ssrv"></xref>.</t>

      <t>In the example below, for domain 'example.net', the resolution
      algorithm will result in IP address(es), port, tag, and protocol tuples
      listed in Table 1.</t>

      <t><figure anchor="ssrv"
          title="Sample Example of Discovery of DOTS Servers using Service Resolution">
          <artwork><![CDATA[ example.net.
 IN NAPTR 100 10 "" DOTS:signal.udp "" signal.example.net.
 IN NAPTR 200 10 "" DOTS:signal.tcp "" signal.example.net.
 IN NAPTR 300 10 "" DOTS:data.tcp "" data.example.net.

 signal.example.net.
 IN NAPTR 100 10 "s" DOTS:signal.udp "" _dots-signal._udp.example.net.
 IN NAPTR 200 10 "s" DOTS:signal.tcp "" _dots-signal._tcp.example.net.

 data.example.net.
 IN NAPTR 100 10 "s" DOTS:data.tcp "" _dots-data._tcp.example.net.

 _dots-signal._udp.example.net.
 IN SRV   0 0 5000 a.example.net.

 _dots-signal._tcp.example.net.
 IN SRV   0 0 5001 a.example.net.

 _dots-data._tcp.example.net.
 IN SRV   0 0 5002 a.example.net.

 a.example.net.
 IN AAAA  2001:db8::1
]]></artwork>
        </figure><figure>
          <artwork><![CDATA[        +-------+----------+-------------+------+--------+
        | Order | Protocol | IP address  | Port |   Tag  |
        +-------+----------+-------------+------+--------+
        | 1     | UDP      | 2001:db8::1 | 5000 | Signal |
        | 2     | TCP      | 2001:db8::1 | 5001 | Signal |
        | 3     | TCP      | 2001:db8::1 | 5002 | Data   |
        +-------+----------+-------------+------+--------+
                           Table 1]]></artwork>
        </figure></t>

      <t>An example is provided in <xref target="callhome"></xref> for the
      Call Home case. In this example, the resolution algorithm will result in
      IP address(es), port, and protocol listed in Table 2 for domain
      'example.net'.</t>

      <t><figure anchor="callhome"
          title="Sample Example of Discovery of DOTS Call Home Client using Service Resolution">
          <artwork><![CDATA[ example.net.
 IN NAPTR 100 10 "" DOTS-CALL-HOME:signal.udp "" signal.example.net.
 IN NAPTR 200 10 "" DOTS-CALL-HOME:signal.tcp "" signal.example.net.

 signal.example.net.
 IN NAPTR 100 10 "s" DOTS-CALL-HOME:signal.udp "" 
            _dots-call-home._udp.example.net.
 IN NAPTR 200 10 "s" DOTS-CALL-HOME:signal.tcp "" 
            _dots-call-home._tcp.example.net.

 _dots-call-home._udp.example.net.
 IN SRV   0 0 6000 b.example.net.

 _dots-call-home._tcp.example.net.
 IN SRV   0 0 6001 b.example.net.

 b.example.net.
 IN AAAA  2001:db8::2

]]></artwork>
        </figure><figure>
          <artwork><![CDATA[          +-------+----------+-------------+------+
          | Order | Protocol | IP address  | Port |
          +-------+----------+-------------+------+
          | 1     | UDP      | 2001:db8::2 | 6000 |
          | 2     | TCP      | 2001:db8::2 | 6001 |
          +-------+----------+-------------+------+
                         Table 2]]></artwork>
        </figure></t>

      <t>Note that customized port numbers are used for the DOTS signal
      channel, DOTS data channel, and DOTS signal channel call home in the
      examples shown in Figures <xref format="counter" target="ssrv"></xref>
      and <xref format="counter" target="callhome"></xref> for illustration
      purposes. If default port numbers are used in a deployment, the
      discovery procedure will return TBD1 (DOTS signal channel), 443 (DOTS
      data channel), and TBD2 (DOTS signal channel call home) as DOTS service
      port numbers.</t>

      <t>If no DOTS-specific S-NAPTR records can be retrieved, the discovery
      procedure fails for this domain name (and the corresponding interface
      and IP protocol version). If more domain names are known, the discovery
      procedure MAY perform the corresponding S-NAPTR lookups immediately.
      However, before retrying a lookup that has failed, a DOTS client MUST
      wait a time period that is appropriate for the encountered error (e.g.,
      NXDOMAIN, timeout, etc.).</t>
    </section>

    <section anchor="DNSSD" title="DNS Service Discovery">
      <t>DNS-based Service Discovery (DNS-SD) <xref target="RFC6763"></xref>
      provides generic solutions for discovering services. DNS-SD defines a
      set of naming rules for certain DNS record types that they use for
      advertising and discovering services.</t>

      <t>Section 4.1 of <xref target="RFC6763"></xref> specifies that a
      service instance name in DNS-SD has the following structure:</t>

      <t><figure align="center">
          <artwork><![CDATA[<Instance> . <Service> . <Domain>]]></artwork>
        </figure></t>

      <t>The &lt;Domain&gt; portion specifies the DNS sub-domain where the
      service instance is registered. It may be "local.", indicating the mDNS
      local domain, or it may be a conventional domain name such as
      "example.com.".</t>

      <t>The &lt;Service&gt; portion of the DOTS service instance name MUST be
      "_dots-signal._udp" or "_dots-signal._tcp" or "_dots-data._tcp" or
      "_dots-call-home._udp" or "_dots-call-home._tcp".</t>

      <t>This document does not define any keys; the TXT record is thus empty
      (Section 6 <xref target="RFC6763"></xref>). </t>

      <t><xref target="sdex"></xref> depicts an excerpt of the DNS zone
      configuration file listing record examples to discover two DOTS signal
      channel servers. In this example, only UDP is supported as transport for
      the establishment of the DOTS signal channel.</t>

      <t><figure anchor="sdex"
          title="An Example of DNS-SD Records for the UDP DOTS Signal Channel involving Two Servers with the Same Priority.">
          <artwork><![CDATA[_dots-signal._udp.example.net. PTR  a._dots-signal._udp.example.net.
_dots-signal._udp.example.net. PTR  b._dots-signal._udp.example.net.
a._dots-signal._udp.example.net. SRV 0 0 4646 a.example.net.
b._dots-signal._udp.example.net. SRV 0 0 4646 b.example.net.
a._dots-signal._udp.example.net. TXT ""
b._dots-signal._udp.example.net. TXT ""
]]></artwork>
        </figure></t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>DOTS-related security considerations are discussed in Section 4 of
      <xref target="I-D.ietf-dots-architecture"></xref>. As a reminder, DOTS
      agents must authenticate each other using (D)TLS before a DOTS session
      is considered valid according to the <xref
      target="I-D.ietf-dots-signal-channel"></xref>.</t>

      <section title="DHCP">
        <t>The security considerations in <xref target="RFC2131"></xref> and
        <xref target="RFC8415"></xref> are to be considered.</t>
      </section>

      <section title="Service Resolution">
        <t>The primary attack against the methods described in <xref
        target="srvr"></xref> is one that would lead to impersonation of a
        peer DOTS agent. An attacker could attempt to compromise the S-NAPTR
        resolution. The use of mutual authentication makes it difficult to
        redirect a DOTS client (or a Call Home DOTS server) to an illegitimate
        DOTS server (or a Call Home DOTS client).</t>
      </section>

      <section title="DNS Service Discovery">
        <t>Since DNS-SD is a specification for how to name and use records in
        the existing DNS system, it has no specific additional security
        requirements over and above those that already apply to DNS queries
        and DNS updates. For DNS queries, DNS Security Extensions (DNSSEC)
        <xref target="RFC4033"></xref> SHOULD be used where the authenticity
        of information is important. For DNS updates, secure updates <xref
        target="RFC2136"></xref><xref target="RFC3007"></xref> SHOULD
        generally be used to control which clients have permission to update
        DNS records.</t>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t></t>

      <section title="The Service Name and Transport Protocol Port Number Registry">
        <t>IANA is requested to allocate the following service name from the
        registry available at:
        https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml.</t>

        <t><figure>
            <artwork><![CDATA[     Service Name:            dots-data
     Port Number:             N/A
     Transport Protocol(s):   TCP
     Description:             DOTS Data Channel Protocol 
                              The service name is used to construct the
                              SRV service name "_dots-data._tcp" for discovering
                              DOTS servers used to establish DOTS data channel. 
     Assignee:                IESG <iesg@ietf.org>
     Contact:                 IETF Chair <chair@ietf.org>
     Reference:               [ThisDocument]
]]></artwork>
          </figure></t>

        <t>IANA is requested to update the following entries from the registry
        available at:
        https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml.</t>

        <t><figure>
            <artwork><![CDATA[     Service Name:            dots-signal
     Port Number:             TBD1
     Transport Protocol(s):   TCP/UDP
     Description:             DOTS Signal Channel Protocol. 
                              The service name is used to construct the
                              SRV service names "_dots-signal._udp" and 
                              "_dots-signal._tcp" for discovering DOTS 
                              servers used to establish DOTS signal channel. 
     Assignee:                IESG <iesg@ietf.org>
     Contact:                 IETF Chair <chair@ietf.org>
     Reference:               [I-D.ietf-dots-signal-channel][ThisDocument]


     Service Name:            dots-call-home
     Port Number:             TBD2
     Transport Protocol(s):   TCP/UDP
     Description:             DOTS Signal Channel Call Home Protocol.
                              The service name is used to construct the
                              SRV service names "_dots-call-home._udp" and
                              "_dots-call-home._tcp" for discovering Call
                              Home DOTS clients used to establish DOTS signal
                              channel call home.
     Assignee:                IESG <iesg@ietf.org>
     Contact:                 IETF Chair <chair@ietf.org>
     Reference:               [I-D.ietf-dots-call-home][ThisDocument]
]]></artwork>
          </figure><list style="empty">
            <t>Note to the RFC Editor: Please replace TBD1 and TBD2 with the
            port numbers to be allocated by IANA as requested in
            [I-D.ietf-dots-signal-channel] and [I-D.ietf-dots-call-home].</t>
          </list></t>
      </section>

      <section anchor="iana6" title="DHCPv6 Options">
        <t>IANA is requested to assign the following new DHCPv6 Option Codes
        in the registry maintained in:
        https://www.iana.org/assignments/dhcpv6-parameters/dhcpv6-parameters.xhtml#dhcpv6-parameters-2.</t>

        <t><figure>
            <artwork><![CDATA[Value   Description              Client ORO    Singleton Option
TBD1    OPTION_V6_DOTS_RI        Yes           Yes
TBD2    OPTION_V6_DOTS_ADDRESS   Yes           Yes]]></artwork>
          </figure></t>
      </section>

      <section anchor="iana4" title="DHCPv4 Options">
        <t>IANA is requested to assign the following new DHCPv4 Option Codes
        in the registry maintained in:
        https://www.iana.org/assignments/bootp-dhcp-parameters/bootp-dhcp-parameters.xhtml#options.</t>

        <texttable style="headers">
          <ttcol align="right">Name</ttcol>

          <ttcol>Tag</ttcol>

          <ttcol>Data Length</ttcol>

          <ttcol>Meaning</ttcol>

          <ttcol>Reference</ttcol>

          <c>OPTION_V4_DOTS_RI</c>

          <c>TBA3</c>

          <c>N</c>

          <c>The name of the peer DOTS agent.</c>

          <c>[ThisDocument]</c>

          <c>OPTION_V4_DOTS_ADDRESS</c>

          <c>TBA4</c>

          <c>N (the minimal length is 4)</c>

          <c>N/4 IPv4 addresses of peer DOTS agent(s).</c>

          <c>[ThisDocument]</c>
        </texttable>

        <t></t>
      </section>

      <section title="Application Service &amp; Application Protocol Tags">
        <t>This document requests IANA to make the following allocations from
        the registries available at:
        https://www.iana.org/assignments/s-naptr-parameters/s-naptr-parameters.xhtml#s-naptr-parameters-1
        for Application Service Tags and
        https://www.iana.org/assignments/s-naptr-parameters/s-naptr-parameters.xhtml#s-naptr-parameters-2
        for Application Protocol Tags.</t>

        <section anchor="serviceT"
                 title="DOTS Application Service Tag Registration">
          <t><list style="symbols">
              <t>Application Service Tag: DOTS</t>

              <t>Intended Usage: See <xref target="srvr"></xref></t>

              <t>Security Considerations: See <xref
              target="Security"></xref></t>

              <t>Interoperability considerations: None</t>

              <t>Relevant publications: This document</t>
            </list></t>
        </section>

        <section anchor="serviceT2"
                 title="DOTS Call Home Application Service Tag Registration">
          <t><list style="symbols">
              <t>Application Service Tag: DOTS-CALL-HOME</t>

              <t>Intended Usage: See <xref target="srvr"></xref></t>

              <t>Security Considerations: See <xref
              target="Security"></xref></t>

              <t>Interoperability considerations: None</t>

              <t>Relevant publications: This document</t>
            </list></t>
        </section>

        <section anchor="suappt"
                 title="signal.udp Application Protocol Tag Registration">
          <t><list style="symbols">
              <t>Application Protocol Tag: signal.udp</t>

              <t>Intended Usage: See <xref target="srvr"></xref></t>

              <t>Security Considerations: See <xref
              target="Security"></xref></t>

              <t>Interoperability considerations: None</t>

              <t>Relevant publications: This document</t>
            </list></t>
        </section>

        <section anchor="stappt"
                 title="signal.tcp Application Protocol Tag Registration">
          <t><list style="symbols">
              <t>Application Protocol Tag: signal.tcp</t>

              <t>Intended Usage: See <xref target="srvr"></xref></t>

              <t>Security Considerations: See <xref
              target="Security"></xref></t>

              <t>Interoperability considerations: None</t>

              <t>Relevant publications: This document</t>
            </list></t>
        </section>

        <section anchor="dappt"
                 title="data.tcp Application Protocol Tag Registration">
          <t><list style="symbols">
              <t>Application Protocol Tag: data.tcp</t>

              <t>Intended Usage: See <xref target="srvr"></xref></t>

              <t>Security Considerations: See <xref
              target="Security"></xref></t>

              <t>Interoperability considerations: None</t>

              <t>Relevant publications: This document</t>
            </list></t>
        </section>
      </section>
    </section>

    <section title="Contributors">
      <t><figure>
          <artwork><![CDATA[   Prashanth Patil
   Cisco Systems, Inc.

   Email: praspati@cisco.com]]></artwork>
        </figure></t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>Thanks to Brian Carpenter for the review of the BRSKI text.</t>

      <t>Many thanks to Russ White for the review, comments, and text
      contribution.</t>

      <t>Thanks for Dan Wing, Pei Wei, Valery Smyslov, and Jon Shallow for the
      review and comments.</t>

      <t>Thanks to Bernie Volz for the review of the DHCP section.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include='reference.RFC.8415'?>

      <?rfc include='reference.RFC.3958'?>

      <?rfc include='reference.RFC.2131'?>

      <?rfc include='reference.RFC.2132'?>

      <?rfc include='reference.RFC.6763'?>

      <?rfc include='reference.RFC.3396'?>

      <?rfc include='reference.RFC.4291'?>

      <?rfc include='reference.RFC.8174'?>

      <?rfc include='reference.RFC.6890'?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.I-D.ietf-dots-signal-channel'?>

      <?rfc include='reference.I-D.ietf-dots-architecture'?>

      <?rfc include='reference.I-D.ietf-dots-signal-call-home'?>

      <?rfc include='reference.RFC.7227'?>

      <?rfc include='reference.RFC.8572'?>

      <?rfc include='reference.RFC.6125'?>

      <?rfc include='reference.RFC.4033'?>

      <?rfc include='reference.RFC.2136'?>

      <?rfc include='reference.RFC.3007'?>

      <?rfc include='reference.I-D.ietf-dots-use-cases'
?>

      <?rfc include='reference.I-D.ietf-dots-data-channel'?>

      <?rfc include='reference.I-D.ietf-anima-bootstrapping-keyinfra'?>

      <?rfc include='reference.I-D.ietf-dots-multihoming'?>
    </references>
  </back>
</rfc>
